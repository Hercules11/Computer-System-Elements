// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 * if the ALU output == 0, zr is set to 1; otherwise zr is set to 0;
 * if the ALU output < 0, ng is set to 1; otherwise ng is set to 0.
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not
// if (f == 1)  set out = x + y  // integer 2's complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not
// if (out == 0) set zr = 1
// if (out < 0) set ng = 1

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

    PARTS:
   // Put you code here:
//可以考虑用输入参数，和控制码进行操作，这样的话要考虑正反两种情况对参数值的改变
//也可以用sel进行选择性输出，这样简单一些(Mux的应用，学习卡特图)
And16(a=x, b=false, out=outzx);
Mux16(a=x, b=outzx, sel=zx, out=rzx); //直接改为0就可以了，我还傻乎乎地搞了一通操作
Not16(in=rzx, out=outrnx);
Mux16(a=rzx, b=outrnx, sel=nx, out=rnx);

And16(a=y, b=false, out=outzy);
Mux16(a=y, b=outzy, sel=zy, out=rzy);
Not16(in=rzy, out=outrny);
Mux16(a=rzy, b=outrny, sel=ny, out=rny);

Add16(a=rnx, b=rny, out=r1);
And16(a=rnx, b=rny, out=r2);
Mux16(a=r2, b=r1, sel=f, out=r12);


Not16(in=r12, out=nr12);
Mux16(a=r12, b=nr12, sel=no, out=out, out[15]=ng,out[0..7]=outlo,out[8..15]=outhi);
//大概是值已经输出去了，不能再转回来？此处存疑
//There is an error ,cant connect to gate's part. Maybe the value cant trans here.
Or8Way(in=outlo, out=ror1);
Or8Way(in=outhi, out=ror2);
Or(a=ror1, b=ror2, out=ror);
Not(in=ror, out=zr);

//Mux16(a=postfunc,b=notpostfunc,sel=no,out=out,out[15]=ng, out[0..7]=outlo,out[8..15]=outhi);

//There is an error ,cant connect to gate's part. Maybe the value cant trans here.
//And(a=out[15], b=true, out=ng); 
//直接输出out[15]即可

}